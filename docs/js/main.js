async function fetchJSON(url, opts){ const res = await fetch(url, opts); return res.json(); }

document.addEventListener('DOMContentLoaded', ()=>{ loadDashboard(); const form = document.getElementById('submitForm'); if(form){ form.addEventListener('submit', async (e)=>{ e.preventDefault(); const name = document.getElementById('name').value.trim(); const message = document.getElementById('message').value.trim(); const status = document.getElementById('status'); status.textContent = 'Sende...'; try{ const j = await fetchJSON(API_BASE + '/submit', { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify({ name, message }) }); if(j.ok){ status.textContent = 'Danke — wartet auf Moderation.'; form.reset(); loadDashboard(); } else status.textContent = 'Fehler: ' + (j.error||'Unbekannt'); }catch(err){ status.textContent = 'Netzwerkfehler'; } setTimeout(()=>{ status.textContent=''; }, 4000); }); } });

async function loadDashboard(){ try{ const pub = await fetch(API_BASE + '/public/submissions').then(r=>r.json()).catch(()=>({ok:false})); const subs = pub.ok ? pub.submissions : []; const recent = document.getElementById('recent'); if(recent){ recent.innerHTML = subs.slice(0,5).map(s=>`<div class="item"><strong>${escapeHtml(s.name)}</strong><div class="muted">${new Date(s.createdAt).toLocaleString()}</div><p>${escapeHtml(s.message)}</p></div>`).join('') || '<div class="muted">Keine veröffentlichten Beiträge</div>'; } document.getElementById('total') && (document.getElementById('total').textContent = subs.length); document.getElementById('published') && (document.getElementById('published').textContent = subs.filter(s=>s.published).length); document.getElementById('pending') && (document.getElementById('pending').textContent = '—'); }catch(e){ console.error(e); } }

function escapeHtml(s){ return String(s||'').replace(/[&<>\"']/g, m=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;"}[m])); }